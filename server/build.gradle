plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.dev5ops'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springAiVersion', "1.0.0-M2")
    set('springCloudGcpVersion', "5.7.0")
    set('springCloudVersion', "2023.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'com.google.cloud:spring-cloud-gcp-starter-storage'
//    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.modelmapper:modelmapper:3.1.1'

    // Google Cloud Vision Api 클라이언트 라이브러리 추가
    implementation 'com.google.cloud:google-cloud-vision:3.34.0'
    implementation platform('com.google.cloud:libraries-bom:26.1.0')
    implementation 'com.google.cloud:google-cloud-storage'

//    // Swagger Annotations and UI dependencies
//    implementation 'io.swagger.core.v3:swagger-annotations:2.1.10'
//    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // import jakarta.ws.rs.core.HttpHeaders; 이 라이브러리 사용 위함 -> 기존에는 eureka-client에 있었음.
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'

    // jwt token을 위한 옵션
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // smtp를 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'net.nurigo:sdk:4.3.0'
}

dependencyManagement {
    imports {
        mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
